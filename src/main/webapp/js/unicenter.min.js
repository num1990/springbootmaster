if ($.validator) {
    $.validator.setDefaults({
        focusInvalid: true,
        highlight: function(element) {
            $(element).closest('.form-group').addClass('has-error');
        },
        unhighlight: function(element) {
            $(element).closest('.form-group').removeClass('has-error');
        },
        errorElement: 'span',
        errorClass: 'help-block error',
        errorPlacement: function(error, element) {
            if (element.parent('.input-group').length || element.prop('type') === 'checkbox' || element.prop('type') === 'radio') {
                error.insertAfter(element.parent());
            } else {
                error.insertAfter(element);
            }
        }
    });
    // $.validator.setDefaults({
    //     highlight: function (element) {
    //         $(element).closest('.form-group').addClass('has-error');
    //     },
    //     unhighlight: function (element) {
    //         $(element).closest('.form-group').removeClass('has-error');
    //     },
    //     showErrors: function (errorMap, errorList) {
    //         //Clean up any tooltips for valid elements
    //         $.each(this.validElements(), function (index, element) {
    //             var $element = $(element);
    //
    //             $element.data("title", "") // Clear the title - there is no error associated anymore
    //                 .tooltip("destroy");
    //             $element.closest('.form-group').removeClass('has-error');
    //         });
    //
    //         // Create new tooltips for invalid elements
    //         $.each(errorList, function (index, error) {
    //             var $element = $(error.element);
    //             $element.closest('.form-group').addClass('has-error');
    //
    //             $element.tooltip("destroy") // Destroy any pre-existing tooltip so we can repopulate with new tooltip content
    //                 .data("title", error.message)
    //                 .data("placement", "bottom")
    //                 .tooltip(); // Create a new tooltip based on the error messsage we just set in the title
    //         });
    //     }
    // });
}

$(document).ready(function () {
    $('#side-menu').metisMenu();
    $.material.init();

    //Loads the correct sidebar on window load,
    //collapses the sidebar on window resize.
    // Sets the min-height of #page-w`pper to window size
    $(window).bind("load resize", function () {
        topOffset = 50;
        width = (this.window.innerWidth > 0) ? this.window.innerWidth : this.screen.width;
        if (width < 768) {
            $('div.navbar-collapse').addClass('collapse');
            topOffset = 100; // 2-row-menu
        } else {
            $('div.navbar-collapse').removeClass('collapse');
        }

        height = ((this.window.innerHeight > 0) ? this.window.innerHeight : this.screen.height) - 1;
        height = height - topOffset;
        if (height < 1) height = 1;
        if (height > topOffset) {
            $("#page-wrapper").css("min-height", (height) + "px");
        }
    });

    var url = window.location;
    var element = $('ul.nav a').filter(function () {
        return this.href == url || url.href.indexOf(this.href) == 0;
    }).addClass('active').parent().parent().addClass('in').parent();
    if (element.is('li')) {
        element.addClass('active');
    }

    if ($('ul.nav a.active').size() <= 0) {
        $('ul.nav li.default a').addClass('active');
    }

    $('body').on('change', 'select', function (ev) {
        if ($(this).find('option:selected').val() == "") {
            $(this).css('color', '#bdbdbd');
            $(this).children().not(':first').css('color', '#555');
        } else {
            $(this).css('color', '#555');
            $(this).children().not(':first').css('color', '#555');
        }
    });

    $('body select').each(function (ev) {
        if ($(this).find('option:selected').val() == "") {
            $(this).css('color', '#bdbdbd');
            $(this).children().not(':first').css('color', '#555');
        } else {
            $(this).css('color', '#555');
            $(this).children().not(':first').css('color', '#555');
        }
    });


    function approval(div, url, time) {

        if ($(div).length) {
            var fuction_refersh = function () {
                jQuery.ajaxSetup({ cache: false });
                $.getJSON(url, function (data) {
                    $(div).html(data);
                });
                var total = 0;
                if($('.nav .dropdown-menu [id^=count]').length){
                    $('.nav .dropdown-menu [id^=count]').each(function (){
                        var count = parseInt($(this).text());
                        total +=count;
                    });
                }
                $("#count_total").html(total);
            }

            //fuction_refersh(); //fixed:立刻执行导致登陆调整到一个空的页面，内含data 0之类的信息；
            // setTimeout(fuction_refersh, 1000);
            var approvalCountId = setInterval(fuction_refersh, time);
        }
    }

    var contextPath = $('body').attr('contextPath');
    approval('#count_suitabilityApprovalCount', contextPath + '/user/data/suitabilityApprovalCount', 10000);
    approval('#count_suitabilityPreApprovalCount', contextPath + '/user/data/suitabilityClientsApprovalCount', 10000);
    approval('#count_suitabilityRejectedCount', contextPath + '/user/data/suitabilityCountRejected',10000);
    approval('#count_transformApprovalCount', contextPath + '/user/data/transformApprovalCount', 10000);
    approval('#count_suitabilityCloudRejectedCount', contextPath + '/user/data/suitabilityCloudRejectedCount', 10000);

    approval('#count_registrationApprovalCount', contextPath + '/user/data/registrationApprovalCount', 10000);

    approval('#count_matchupCount', contextPath + '/user/data/matchUpCount',10000);
    approval('#count_noticeCount', contextPath + '/user/data/noticeCount',10000);
    approval('#count_visitCount', contextPath + '/user/data/visitCount',10000);
    approval('#count_preApprovalImagePendingCount', contextPath + '/user/data/preApprovalPendingCount',10000);
    approval('#count_preApprovalImageRejectedCount', contextPath + '/user/data/preApprovalRejectedCount',10000);

});