$(function () {
    $('#side-menu').metisMenu();
    $.material.init();
});

if($.validator) {
$.validator.setDefaults({
    highlight: function(element) {
        $(element).closest('.form-group').addClass('has-error');
    },
    unhighlight: function(element) {
        $(element).closest('.form-group').removeClass('has-error');
    },
    errorElement: 'span',
    errorClass: 'help-block',
    errorPlacement: function(error, element) {
        if(element.parent('.input-group').length) {
            error.insertAfter(element.parent());
        } else {
            error.insertAfter(element);
        }
    }
});
    $.validator.setDefaults({
        highlight: function (element) {
            $(element).closest('.form-group').addClass('has-error');
        },
        unhighlight: function (element) {
            $(element).closest('.form-group').removeClass('has-error');
        },
        showErrors: function (errorMap, errorList) {
            //Clean up any tooltips for valid elements
            $.each(this.validElements(), function (index, element) {
                var $element = $(element);

                $element.data("title", "") // Clear the title - there is no error associated anymore
                    .tooltip("destroy");
                $element.closest('.form-group').removeClass('has-error');
            });

            // Create new tooltips for invalid elements
            $.each(errorList, function (index, error) {
                var $element = $(error.element);
                $element.closest('.form-group').addClass('has-error');

                $element.tooltip("destroy") // Destroy any pre-existing tooltip so we can repopulate with new tooltip content
                    .data("title", error.message)
                    .data("placement","bottom")
                    .tooltip(); // Create a new tooltip based on the error messsage we just set in the title

            });
        }
    });
 }
//Loads the correct sidebar on window load,
//collapses the sidebar on window resize.
// Sets the min-height of #page-wrapper to window size
$(function () {
    $(window).bind("load resize", function () {
        topOffset = 50;
        width = (this.window.innerWidth > 0) ? this.window.innerWidth : this.screen.width;
        if (width < 768) {
            $('div.navbar-collapse').addClass('collapse');
            topOffset = 100; // 2-row-menu
        } else {
            $('div.navbar-collapse').removeClass('collapse');
        }

        height = ((this.window.innerHeight > 0) ? this.window.innerHeight : this.screen.height) - 1;
        height = height - topOffset;
        if (height < 1) height = 1;
        if (height > topOffset) {
            $("#page-wrapper").css("min-height", (height) + "px");
        }
    });

//    var url = window.location;
//    $('ul.nav a').filter(function() {
//        return this.href == url || url.href.indexOf(this.href) == 0;
//    }).addClass('active').closest("li").addClass('active');

    var url = window.location;
    var element = $('ul.nav a').filter(function () {
        return this.href == url || url.href.indexOf(this.href) == 0;
    }).addClass('active').parent().parent().addClass('in').parent();
    if (element.is('li')) {
        element.addClass('active');
    }

    if ($('ul.nav a.active').size() <= 0) {
        $('ul.nav li.default a').addClass('active');
    }
});

$(document).ready(function(){
//    Inputmask.extendDefinitions({
//        'A': {
//          validator: "[Xx0-9]",
//          cardinality: 1,
//          casing: "upper" //auto uppercasing
//        }
//    });
//  $("#domestic-registration-identity").inputmask({mask: "99-9999-[99]99-9999-999[A]", greedy: false});  //static mask
//  $("#domestic-registration-mobile").inputmask({mask: "999-9999-9999", greedy: false});  //static mask
//  $(selector).inputmask({"mask": "(999) 999-9999"}); //specifying options
//  $(selector).inputmask("9-a{1,3}9{1,3}"); //mask with dynamic syntax

    if ($.fn.datepicker) {
       $('#domestic-registration-expiredDate').datepicker({
               enableOnReadonly: false,
               language: 'zh-CN',
               format: 'yyyy-mm-dd',
               startDate: '+1d',
               endDate: '+140y',
               startView : 'decade'
       });
       $('#domestic-registration-birthDate').datepicker({
           enableOnReadonly: false,
           language: 'zh-CN',
           format: 'yyyy-mm-dd',
           startDate: '-140y',
           endDate: '-18y',
           startView : 'decade'
       });

       $("[id^=registration-contacts-expiredDate_]").each(function(i){
          $(this).datepicker({
                  enableOnReadonly: false,
                  language: 'zh-CN',
                  format: 'yyyy-mm-dd',
                  startDate: '+1d',
                  endDate: '+140y',
                  startView : 'decade'
          });
       });

       $("[id^=domestic-registration-longTerm_]").each(function(i){
          $(this).click( function(){
              if( $(this).is(':checked') ) {
                   $("#registration-contacts-expiredDate_"+i).val("");
                   $("#registration-contacts-expiredDate_"+i).prop("readonly", true);
              }else{
                   $("#registration-contacts-expiredDate_"+i).prop("readonly", false);
              }
           });
       });
    }

    // validator setup
    function isIdNumberValid(idNumber) {
        var num = getFromInputMask(idNumber);
        //console.log(num+","+ idNumber)
        var factorArr = new Array(7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2, 1);
        var parityBit = new Array("1", "0", "X", "9", "8", "7", "6", "5", "4", "3", "2");
        var varArray = new Array();
        var lngProduct = 0;
        var intCheckDigit;
        var intStrLen = num.length;
        var idNumber = num;
        // initialize
        if ((intStrLen != 15) && (intStrLen != 18)) {
            return false;
        }
        // check and set value
        for (i = 0; i < intStrLen; i++) {
            varArray[i] = idNumber.charAt(i);
            if ((varArray[i] < '0' || varArray[i] > '9') && (i != 17)) {
                return false;
            } else if (i < 17) {
                varArray[i] = varArray[i] * factorArr[i];
            }
        }
        if (intStrLen == 18) {
            //check date
            var date8 = idNumber.substring(6, 14);
            if (isDate8(date8) == false) {
                return false;
            }
            // calculate the sum of the products
            for (i = 0; i < 17; i++) {
                lngProduct = lngProduct + varArray[i];
            }
            // calculate the check digit
            intCheckDigit = parityBit[lngProduct % 11];
            // check last digit
            if (varArray[17] != intCheckDigit) {
                return false;
            }
        }
        else {        //length is 15
            //check date
            var date6 = idNumber.substring(6, 12);
            if (isDate6(date6) == false) {
                console.log(date6+","+ date6)
                return false;
            }
        }
        return true;
    }
    function getFromInputMask(str){
        var num = str.replace(/_/g, "");
        return num.replace(/-/g, "");
    }
    function getBirthDateFromId(idNumber){
        var dateStr = "";
        if(idNumber.length == 15){
             dateStr = "19" + idNumber.substring(6, 12);
             return dateStr.substring(0, 4) + "-" + dateStr.substring(4, 6) + "-" + dateStr.substring(6)
        }

        if(idNumber.length == 18){
             dateStr = idNumber.substring(6, 14);
             return dateStr.substring(0, 4) + "-" + dateStr.substring(4, 6) + "-" + dateStr.substring(6)
        }
    }
    function getGenderFromId(idNumber){
        var genderStr = "";
        if(idNumber.length == 15){
             genderStr = idNumber.substr(14,1);
        }

        if(idNumber.length == 18){
             genderStr = idNumber.substr(16,1);
        }

        if(genderStr%2 == 0){//female
            return 0;
        }else{
            return 1;//male
        }
    }
    function isDate6(sDate) {
        if (!/^[0-9]{6}$/.test(sDate)) {
            return false;
        }
        var year, month, day;
        year = "19" + sDate.substring(0, 2);
        month = sDate.substring(2, 4);
        day = sDate.substring(4, 6);
        var iaMonthDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
        if (year < 1700 || year > 2500) return false
        if (((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0)) iaMonthDays[1] = 29;
        if (month < 1 || month > 12) return false
        if (day < 1 || day > iaMonthDays[month - 1]) return false
        return true
    }

    function isDate8(sDate) {
        if (!/^[0-9]{8}$/.test(sDate)) {
            return false;
        }
        var year, month, day;
        year = sDate.substring(0, 4);
        month = sDate.substring(4, 6);
        day = sDate.substring(6, 8);
        var iaMonthDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
        if (year < 1700 || year > 2500) return false
        if (((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0)) iaMonthDays[1] = 29;
        if (month < 1 || month > 12) return false
        if (day < 1 || day > iaMonthDays[month - 1]) return false
        return true
    }

    $.validator.addMethod("isIdNumberValid", function (value) {
        return isIdNumberValid(value);
    }, "请输入正确的身份证号码");

    $.validator.addMethod("telphoneValid", function(value, element, regexpr) {
        var num = value.replace(/-/g, "");

        return regexpr.test(num);
    }, "请输入正确的手机号码");

    // validate domestic person identity
    $("#createInitialAdministratorForm").validate({
        rules: {
                username: {
                        required: true,
                        minlength: 3,
                        maxlength: 32,
                },
                surname: {
                    required: true,
                    minlength:1,
                    maxlength:13,
//                    remote: "/registration/demostic/person/phone"
                },
                email: {
                        required: true,
                        email: true
                },
                givenName: {
                        required: true,
                        maxlength:13
                },
                mobileNumber: {
                         required: true,
                         minlength:11,
                         maxlength:13,
                         telphoneValid: /^(130|131|132|133|134|135|136|137|138|139|147|150|151|152|153|155|156|157|158|159|180|182|185|186|187|188|189)\d{8}$/
                },
                password:{
                         required: true,
                         minlength:6,
                         maxlength:16

                     },
                password2:{
                         required: true,
                         minlength:6,
                         maxlength:16

                       }
        },
        submitHandler: function (form) {
            form.submit();
        },
        highlight: function(element) {
            $(element).closest('.form-group').addClass('has-error');
        },
        unhighlight: function(element) {
            $(element).closest('.form-group').removeClass('has-error');
        },
        messages: {
            username:{
                required: "请输用户名",
                minlength:"最少三位",
                maxlength:"位数不正确"
            },
            surname:{
                required: "请输入姓氏",
                maxlength: "位数不正确"
            },
            email:{
                required: "请输入邮箱地址",
                email: "请输入正确的邮箱地址"
            },
            givenName:{
                 required: "请输入名字",
                 maxlength: "位数不正确"
             },
            mobileNumber:{
                  required: "请输入手机号码",
                  minlength: "请输入11位手机号码",
                  maxlength: "请输入11位手机号码",
                  telphoneValid: "请输入正确的手机号码"
                //  remote: $.validator.format("{0} 手机号码已被注册")
              },
            password:{
                    required: "请输入密码",
                    minlength:"最少6位",
                    maxlength:"最长16位"
                } ,
            password2:{
                     required: "请输入密码",
                     minlength:"最少6位",
                     maxlength:"最长16位"
                 }
        }
    });
    $("#domesticPersonRegistrationExchange").validate({
         rules:{
            codex: {
                required: function(){
                       var n = $(".zhongguojinrong input:checked" ).length;
                       if(n > 0){
                           return true;
                       }
                       return false;
                  }
            }
         }
    });
    $("#domesticPersonRegistrationIdentity").validate({
        rules: {
                 name:{
                     required: true,
                     maxlength:250
                 },
                 identityCardNumber: {
                         required: true,
                         minlength: 15,
                         maxlength: 18,
                         isIdNumberValid: true
           //              remote:"/registration/identity/validate"
                 },
                 expiredDate:{
                     required: function(){
                                   if($("#domestic-registration-longTerm").is(':checked')){
                                       return false;
                                   }
                                   return true;
                              },
                     date : true
                 },
                 mobile: {
                     required: true,
//                     minlength:11,
                     maxlength:50,
//                     telphoneValid: /^(13|14|15|18|17)\d{9}$/
           //          remote: "/registration/demostic/person/phone"
                 },
                 gender:{
                     required: true
                 },
                 birthDate:{
                     required: true,
                     date : true
                 },
                 email: {
                     required: true,
                     email: true,
                     maxlength:200
                 },
                 provinceCode: {
                     required: true
                 },
                 cityCode:{
                     required: true
                 },
                 addressDetails:{
                     required: true,
                     maxlength:200
                 },
                 zipCode:{
                      required: true,
                      number: true,
                      maxlength:50
                 },
                 companyName:{
                    maxlength:100
                 },
                 comments:{
                    maxlength:255
                  },
                 phoneNumber:{
                   maxlength:50
                 },
                 zoneCode:{
                   maxlength:20
                 },
                 backPhoneZoneCode:{
                    maxlength:50
                  }
               },
               submitHandler: function (form) {
                   form.submit();
               },
               highlight: function(element) {
                   $(element).closest('.form-group').addClass('has-error');
               },
               unhighlight: function(element) {
                   $(element).closest('.form-group').removeClass('has-error');
               },
               messages: {
                   name: {
                      maxlength: "姓名不能超过250个字符"
                   },
                   idNumber:{
                       required: "请输身份证号码",
                       minlength:"身份证号码位数不正确",
                       maxlength:"身份证号码位数不正确",
                       isIdNumberValid: "请输入合法的身份证号码",
       //                remote: $.validator.format("{0} 身份证已被注册")
                   },
                   mobile:{
                       required: "请输入手机号码",
//                       minlength: "请输入11位手机号码",
                       maxlength: "手机号码不能超过50个字符",
//                       telphoneValid: "请输入正确的手机号码",
       //                remote: $.validator.format("{0} 手机号码已被注册")
                   },
                   email:{
                       required: "请输入邮箱地址",
                       email: "请输入正确的邮箱地址",
                       maxlength:"邮箱不能超过200个字符"
       //                remote: $.validator.format("{0} 邮箱地址已被注册")
                   },
                   companyName:{
                      maxlength:"工作单位不能超过100个字符"
                   },
                   addressDetails:{
                     required: "请输入详细地址",
                     maxlength:"详细地址不能超过200个字符"
                   },
                   zipCode:{
                     required: "请输入邮编",
                     number: "邮编只能为数字",
                     maxlength:"邮编长度不超过50位"
                   },
                   comments:{
                     maxlength:"备注长度小于等于255"
                   },
                   phoneNumber:{
                      maxlength:"联系电话不能超过50位"
                    },
                   zoneCode:{
                     maxlength:"联系电话不能超过20位"
                   },
                   backPhoneZoneCode:{
                     maxlength:"备用电话不能超过50位"
                   }
               }
    });

    $("#domestic-registration-longTerm").click( function(){
       if( $(this).is(':checked') ) {
            $("#domestic-registration-expiredDate").val("");
            $("#domestic-registration-expiredDate").prop("readonly", true);
       }else{
            $("#domestic-registration-expiredDate").prop("readonly", false);
       }
    });

    $("#domestic-registration-identityCardNumber").blur(function () {
        idNumber = $(this).val();
        var birthDate =  $("#domestic-registration-birthDate");
        var female = $("#domestic-registration-gender_female");
        var male = $("#domestic-registration-gender_male");

        if(isIdNumberValid(idNumber)){
           birthDate.val(getBirthDateFromId(idNumber));
           birthDate.prop('readonly', true);

           var gender = getGenderFromId(idNumber);

           if(gender == 0){
               female.prop("checked",true);
               female.prop("disabled",false);

               male.prop("disabled",true);
               male.prop("checked",false);

           }else{
               male.prop("checked",true);
               male.prop("disabled",false);
               female.prop("checked",false);
               female.prop("disabled",true);
           }
        }else {
            birthDate.prop("readonly", false);
            female.prop("disabled", false);
            male.prop("disabled", false);
        }
    });


    jQuery.validator.addMethod("alphanumeric", function(value, element) {
        return this.optional(element) || /^[a-zA-Z0-9]+$/.test(value);
    });

    //validate domestic person basic info
    $("#domesticPersonRegistrationBasicInfo").validate({
            rules: {
                    customerNumber: {
                            required: true,
                            alphanumeric: true,
                            maxlength: 16
    //                        remote:"/registration/customerNumber/validate"
                    },
                    customerAbbrName: {
                        required: true
                    }
            },
            submitHandler: function (form) {
                form.submit();
            },
            highlight: function(element) {
                $(element).closest('.form-group').addClass('has-error');
            },
            unhighlight: function(element) {
                $(element).closest('.form-group').removeClass('has-error');
            },
            messages: {
                customerNumber:{
                    required: "请输入客户号",
                    alphanumeric: "请输入正确的客户号，必须是字母或者数字",
                    maxlength:"客户号位数不能超过16位"
    //                remote: $.validator.format("{0} 客户号已被注册")
                },
                customerAbbrName:{
                    required: "请输入客户简称"
                }
            }
    });

    $("#bankAccount").validate({
            submitHandler: function (form) {
                form.submit();
            },
            highlight: function(element) {
                $(element).closest('.form-group').addClass('has-error');
            },
            unhighlight: function(element) {
                $(element).closest('.form-group').removeClass('has-error');
            }
    });

     //validate domestic person contacts
     var registrationContactsNextStepForm = $("#domesticPersonRegistrationContacts").validate();

      addAdditionalContactsRoles();

     $( "#domesticPersonRegistrationContacts #nextStep" ).click(function() {
         if(registrationContactsNextStepForm.valid()){
             $(this).submit();
         }
     });

    function addBankAccountsRoles(){
        $("[id^=accountHolder_]").each(function(){
            $(this).rules(
                "add",{
                    required:true,
                    messages:{
                        required:"请输入持卡人"
                    }
                }
            );
        });

         $("[id^=bankNumber_]").each(function(){
            $(this).rules(
                "add",{
                    required:true,
                    digits:true,
                    minlength:6,
                    maxlength:32,
                    messages:{
                        required:"请输入银行卡号",
                        minlength:"卡号最少6位",
                        maxlength:"卡号最长32位"
                    }
                }
            );
         });

         $("[id^=bankName_]").each(function(){
            $(this).rules(
                "add",{
                    required:true,
                    messages:{
                        required:"请输入开户银行"
                    }
                }
            );
         });

         $("[id^=bankBranchName_]").each(function(){
            $(this).rules(
                "add",{
                    required:true,
                    messages:{
                        required:"请输入开户支行"
                    }
                }
            );
         });

         $("[id^=currencyCode_]").each(function(){
            $(this).rules(
                "add",{
                    required:true,
                    messages:{
                        required:"请输入开户币种"
                    }
                }
            );
         });
    }

    $.validator.addMethod("isIdCardAndValid", function(value, element, idType) {
    	if($(idType).val() == '1'){
    		return isIdNumberValid(value);
    	}
    	return true;
    }, "请输入正确的身份证号码");

    function addAdditionalContactsRoles(){
        $("[id^=domestic-registration-name_]").each(function(){
            $(this).rules(
                "add",{
                    required:true,
                    maxlength:100,
                    messages:{
                        required:"请输入姓名",
                        maxlength:"姓名不能超过100个字符"
                    }
                }
            );
        });

        $("[id^=domestic-registration-identityType_]").each(function(i){
            $(this).rules(
                "add",{
                    required:true,
                    messages:{
                        required:"请选择证件类型"
                    }
                }
            );

            $(this).change(function () {
                var female = $("#domestic-registration-gender-female_"+i);
                var male = $("#domestic-registration-gender-male_"+i);

                if($(this).val() != '1') {
                    female.prop("disabled", false);
                    male.prop("disabled", false);
                    return;
                }
                idNumber = $('#domestic-registration-identityNumber_'+i).val();

                if(isIdNumberValid(idNumber)){
                   var gender = getGenderFromId(idNumber);

                   if(gender == 0){
                       female.prop("checked",true);
                       female.prop("disabled",false);

                       male.prop("disabled",true);
                       male.prop("checked",false);

                   }else{
                       male.prop("checked",true);
                       male.prop("disabled",false);
                       female.prop("checked",false);
                       female.prop("disabled",true);
                   }
                }else {
                    female.prop("disabled", false);
                    male.prop("disabled", false);
                }
            });
        });

        $("[id^=domestic-registration-identityNumber_]").each(function(i){
            $(this).rules(
                "add",{
                    required: true,
                    maxlength : 50,
                    isIdCardAndValid: '#domestic-registration-identityType_'+i,
                    messages:{
                        required:"请输入证件号码",
                        maxlength:"证件号码不能超过50个位",
                        isIdCardAndValid: "请输入正确的身份证号码"
                    }
                }
            );

            $(this).blur(function () {
                if($("#domestic-registration-identityType_"+i).val() != '1') {
                    return;
                }
                idNumber = $(this).val();
                var female = $("#domestic-registration-gender-female_"+i);
                var male = $("#domestic-registration-gender-male_"+i);

                if(isIdNumberValid(idNumber)){
                   var gender = getGenderFromId(idNumber);

                   $("#domestic-registration-gender-female_1").prop("checked",true);
                   if(gender == 0){
                       female.prop("checked",true);
                       female.prop("disabled",false);

                       male.prop("disabled",true);
                       male.prop("checked",false);

                   }else{
                       //$("#domestic-registration-gender-female_1").prop("checked",true);
                       male.prop("checked",true);
                       male.prop("disabled",false);
                       female.prop("checked",false);
                       female.prop("disabled",true);
                   }
                }else {
                    female.prop("disabled", false);
                    male.prop("disabled", false);
                }
            });
        });

        $("[id^=registration-contacts-expiredDate_]").each(function(i){
            $(this).rules(
                "add",{
                    required: function(){
                             if($("#domestic-registration-longTerm_"+i).is(':checked')){
                                 return false;
                             }
                             return true;
                        },
                    date: true,
                    messages:{
                        required:"请输入证件截至日期",
                        date:"请输入正确的日期"
                    }
                }
            );
        });

        $("[id^=domestic-registration-gender-male_]").each(function(i){
            $(this).rules(
                "add",{
                    require_from_group: [1, ".gender-group_"+i],
                    messages:{
                        require_from_group:"请选择性别"
                    }
                }
            );
        });

        $("[id^=domestic-registration-gender-female_]").each(function(i){
            $(this).rules(
                "add",{
                    require_from_group: [1, ".gender-group_"+i],
                    messages:{
                        require_from_group:"请选择性别"
                    }
                }
            );
        });

        $("[id^=domestic-registration-mobile_]").each(function(){
            $(this).rules(
                "add",{
                    required:true,
                    digits:true,
                    maxlength:50,
                    messages:{
                        required:"请输入手机号",
                        digits:"手机号只能是数字",
                        maxlength:"手机号不能超过50位"
                    }
                }
            );
        });

        $("[id^=domestic-registration-zoneCode_]").each(function(){
            $(this).rules(
                "add",{
                    required:true,
                    digits:true,
                    messages:{
                        required:"请输入联系电话区号",
                        digits:"请输入正确的联系电话区号"
                    }
                }
            );
        });

        $("[id^=domestic-registration-phoneNumber_]").each(function(){
            $(this).rules(
                "add",{
                    required:true,
                    digits:true,
                    messages:{
                        required:"请输入联系电话",
                        digits:"请输入正确的联系电话"
                    }
                }
            );
        });

        $("[id^=domestic-registration-provinceCode_]").each(function(){
            $(this).rules(
                "add",{
                    required:true,
                    messages:{
                        required:"请选择省"
                    }
                }
            );
        });

        $("[id^=domestic-registration-cityCode_]").each(function(){
            $(this).rules(
                "add",{
                    required:true,
                    messages:{
                        required:"请选择市"
                    }
                }
            );
        });

        $("[id^=domestic-registration-addressDetails_]").each(function(){
            $(this).rules(
                "add",{
                    required:true,
                    maxlength:100,
                    messages:{
                        required:"请输入详细地址",
                        maxlength:"详细地址不能超过100位"
                    }
                }
            );
        });

        $("[id^=domestic-registration-zipCode_]").each(function(){
            $(this).rules(
                "add",{
                    required:true,
                    digits:true,
                    maxlength:10,
                    messages:{
                        required:"请输入邮编",
                        digits:"邮编必须是数字",
                        maxlength:"邮编不能超过10位"
                    }
                }
            );
        });


        $("[id^=domestic-registration-commander_]").each(function(i){
            $(this).rules(
                "add",{
                    require_from_group: [1, ".annotated-group_"+i],
                    messages:{
                        require_from_group:"请选择至少一种联系人方式"
                    }
                }
            );
        });

        $("[id^=domestic-registration-capitalAllocator_]").each(function(i){
            $(this).rules(
                "add",{
                    require_from_group: [1, ".annotated-group_"+i],
                    messages:{
                        require_from_group:"请选择至少一种联系人方式"
                    }
                }
            );
        });

        $("[id^=domestic-registration-statementsConfirmer_]").each(function(i){
            $(this).rules(
                "add",{
                    require_from_group: [1, ".annotated-group_"+i],
                    messages:{
                        require_from_group:"请选择至少一种联系人方式"
                    }
                }
            );
        });

         $("[id^=bankName_]").each(function(){
                $(this).rules(
                    "add",{
                        required:true,
                        messages:{
                            required:"请输入开户银行"
                        }
                    }
                );
            });
         $("[id^=bankBranchName_]").each(function(){
            $(this).rules(
                "add",{
                    required:true,
                    messages:{
                        required:"请输入开户支行"
                    }
                }
            );
         });
         $("[id^=currencyCode_]").each(function(){
            $(this).rules(
                "add",{
                    required:true,
                    messages:{
                        required:"请输入开户币种"
                    }
                }
            );
        });

        if( $('#salesDepartment')){
            if($(".zhongguojinrong input:checked" ).length > 0 ){
                 $('#salesDepartment').prop('disabled', false);
                 $('#second-registration').prop('disabled', false);
            }else{
                 $('#salesDepartment').prop('disabled', true);
                 $('#second-registration').prop('disabled', true);
            }
        }

        $('[id^=zhongguojinrong_]').click(function(){
            var checkVal= $(this).prop("checked");
            if(checkVal){
                $('#salesDepartment').prop('disabled', false);
                $('#second-registration').prop('disabled', false);
            }else{
                var n = $(".zhongguojinrong input:checked" ).length;
                if(n <= 0){
                    $("#salesDepartment").prop("disabled",true);
                    $("#salesDepartment").css('color','#bdbdbd');
                    $("#salesDepartment").val("");
                    $("#second-registration").prop("checked", false);
                    $("#second-registration").prop("disabled", true);
                }
            }
        });
    }

    //为动态的id添加jquery roles
    addBankAccountsRoles();

    $('body').on('change','select', function (ev){
        if($(this).find('option:selected').val() == ""){
            $(this).css('color','#bdbdbd');
            $(this).children().not(':first').css('color','#555');
        }else{
             $(this).css('color','#555');
             $(this).children().not(':first').css('color','#555');
         }
    });

    $('body select').each(function (ev){
        if($(this).find('option:selected').val() == ""){
            $(this).css('color','#bdbdbd');
            $(this).children().not(':first').css('color','#555');
        }else{
            $(this).css('color','#555');
            $(this).children().not(':first').css('color','#555');
        }
    });
});
